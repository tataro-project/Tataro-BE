server {
    listen 80;
    server_name hakunamatatarot.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name hakunamatatarot.com;

    ssl_certificate /etc/nginx/ssl/live/hakunamatatarot.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/hakunamatatarot.com/privkey.pem;

    location / {
        proxy_pass https://tataro-omega.vercel.app/;
        proxy_set_header Host tataro-omega.vercel.app;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /favicon.ico {
        proxy_pass https://tataro-omega.vercel.app/favicon.ico;
        proxy_set_header Host tataro-omega.vercel.app;
        proxy_cache_bypass $http_upgrade;
        access_log off;
        expires 30d;
    }

    location /swagger {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /app/staticfiles/;
    }

    location /ws/ {  # WebSocket 요청 경로
        proxy_pass http://web:8000;  # 내부 서버로 요청 전달
        proxy_http_version 1.1;  # WebSocket은 HTTP/1.1 필요
        proxy_set_header Upgrade $http_upgrade;  # 프로토콜 업그레이드
        proxy_set_header Connection "upgrade";  # 연결 유지
        proxy_set_header Host $host;  # 원본 요청의 호스트 전달
        proxy_set_header X-Real-IP $remote_addr;  # 클라이언트 IP 전달
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 프록시 체인 전달
        proxy_read_timeout 3600;  # 연결 타임아웃 설정 (초)
        proxy_send_timeout 3600;
    }
}
